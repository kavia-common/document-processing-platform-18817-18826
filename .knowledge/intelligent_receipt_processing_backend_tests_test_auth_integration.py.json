{"is_source_file": true, "format": "Python", "description": "This file contains an integration test for the authentication flow, including user registration and login, using a client object to simulate HTTP requests.", "external_files": ["client (test fixture or mock object)"], "external_methods": ["client.post", "resp.get_json"], "published": [], "classes": [], "methods": [{"name": "test_register_and_login_flow(client)", "description": "Tests user registration and login functionality, verifying response statuses and tokens.", "scope": "", "scopeKind": ""}], "calls": ["client.post", "resp.get_json()", "assert resp.status_code in (201, 400)", "assert 'access_token' in data", "assert dup.status_code == 400", "assert login_ok.status_code == 200", "assert isinstance(token, str)", "assert bad_login.status_code == 401"], "search-terms": ["test_auth_integration", "register", "login", "access_token", "authentication test"], "state": 2, "file_id": 23, "knowledge_revision": 74, "git_revision": "", "ctags": [{"_type": "tag", "name": "test_register_and_login_flow", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/test_auth_integration.py", "pattern": "/^def test_register_and_login_flow(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}], "hash": "30aa851cb2fb602b943219960cf0c350", "format-version": 4, "code-base-name": "intelligent_receipt_processing_backend", "filename": "intelligent_receipt_processing_backend/tests/test_auth_integration.py", "revision_history": [{"74": ""}]}