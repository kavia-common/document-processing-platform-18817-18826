{"is_source_file": true, "format": "Python", "description": "This is a test configuration and fixture setup file for a Flask web application using pytest. It defines fixtures for setting up the app, client, database session, user registration, authentication headers, dummy file uploads, and admin seed data. These fixtures facilitate testing various components of the backend application, including database setup, user registration, and authentication.", "external_files": ["app", "app.models"], "external_methods": ["app.app", "app.models.db", "app.models.User", "app.models.seed_admin_if_missing"], "published": [], "classes": [], "methods": [{"name": "Flask app()", "description": "Provides a Flask application configured for testing, with setup and teardown logic for the test database and storage directory.", "scope": "", "scopeKind": ""}, {"name": "client(app: Flask)", "description": "Creates a test client used to simulate HTTP requests to the Flask application.", "scope": "", "scopeKind": ""}, {"name": "db_session(app: Flask)", "description": "Provides a transactional database session for tests, ensuring cleanup after each test.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,str] register_user_and_get_token(client)", "description": "Registers a new user or logs in an existing one, returning an access token and user info for use in tests.", "scope": "", "scopeKind": ""}, {"name": "auth_header(register_user_and_get_token)", "description": "Constructs the authorization header for authenticated requests using the registered user's token.", "scope": "", "scopeKind": ""}, {"name": "make_file_bytes()", "description": "Produces an in-memory bytes buffer simulating a file upload, useful for testing file upload endpoints.", "scope": "", "scopeKind": ""}, {"name": "ensure_admin(db_session)", "description": "Ensures a seeded admin user exists in the database for tests requiring admin privileges, returning login info.", "scope": "", "scopeKind": ""}, {"name": "_factory(content: bytes = b\"Sample receipt total $12.34\", filename: str = \"receipt.txt\")", "scope": "make_file_bytes", "scopeKind": "function", "description": "unavailable"}], "calls": ["shutil.rmtree", "tempfile.mkdtemp", "db.drop_all", "db.create_all", "client.post", "db.session.rollback", "seed_admin_if_missing", "app.app_context"], "search-terms": ["pytest fixtures", "Flask test setup", "admin user seed", "file upload fixture", "in-memory SQLite test config", "authentication token fixture"], "state": 2, "file_id": 22, "knowledge_revision": 72, "git_revision": "", "ctags": [{"_type": "tag", "name": "_factory", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^    def _factory(content: bytes = b\"Sample receipt total $12.34\", filename: str = \"receipt.txt\")/", "file": true, "language": "Python", "kind": "function", "signature": "(content: bytes = b\"Sample receipt total $12.34\", filename: str = \"receipt.txt\")", "scope": "make_file_bytes", "scopeKind": "function"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "auth_header", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def auth_header(register_user_and_get_token):$/", "language": "Python", "kind": "function", "signature": "(register_user_and_get_token)"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def client(app: Flask):$/", "language": "Python", "kind": "function", "signature": "(app: Flask)"}, {"_type": "tag", "name": "db_session", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def db_session(app: Flask):$/", "language": "Python", "kind": "function", "signature": "(app: Flask)"}, {"_type": "tag", "name": "ensure_admin", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def ensure_admin(db_session):$/", "language": "Python", "kind": "function", "signature": "(db_session)"}, {"_type": "tag", "name": "flask_app", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^from app import app as flask_app  # type: ignore$/", "language": "Python", "kind": "unknown", "nameref": "unknown:app"}, {"_type": "tag", "name": "make_file_bytes", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def make_file_bytes():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "register_user_and_get_token", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def register_user_and_get_token(client) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "function", "signature": "(client)"}], "hash": "444793461c1eb8b8b9473b09d18d6784", "format-version": 4, "code-base-name": "intelligent_receipt_processing_backend", "filename": "intelligent_receipt_processing_backend/tests/conftest.py", "revision_history": [{"72": ""}]}