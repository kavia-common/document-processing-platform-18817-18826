{"is_source_file": true, "format": "Python", "description": "This file is a test configuration script for pytest that sets up fixtures for testing a Flask application. It includes fixtures for the Flask app, test client, database session, user registration and authentication, as well as preparing test files and seeding an admin user.", "external_files": ["app", "app.models"], "external_methods": ["app.app", "app.models.db", "app.models.seed_admin_if_missing"], "published": [], "classes": [], "methods": [{"name": "Flask app()", "description": "Provides the Flask app configured for testing, setting up in-memory storage and initializing the database.", "scope": "", "scopeKind": ""}, {"name": "client(app: Flask)", "description": "Returns a test client for the Flask app to simulate requests.", "scope": "", "scopeKind": ""}, {"name": "db_session(app: Flask)", "description": "Provides a database session fixture, ensuring a clean state between tests.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,str] register_user_and_get_token(client)", "description": "Registers a new user via the API and returns authentication tokens and email/password.", "scope": "", "scopeKind": ""}, {"name": "auth_header(register_user_and_get_token)", "description": "Creates an authorization header with a bearer token for authenticated requests.", "scope": "", "scopeKind": ""}, {"name": "make_file_bytes()", "description": "Factory fixture to create in-memory file bytes for upload testing.", "scope": "", "scopeKind": ""}, {"name": "ensure_admin(db_session)", "description": "Seeds an admin user into the test database if missing and returns admin login credentials.", "scope": "", "scopeKind": ""}, {"name": "_factory(content: bytes = b\"Sample receipt total $12.34\", filename: str = \"receipt.txt\")", "scope": "make_file_bytes", "scopeKind": "function", "description": "unavailable"}], "calls": ["flask_app.config.setdefault", "db.drop_all", "db.create_all", "shutil.rmtree", "client.post", "db.session.rollback", "seed_admin_if_missing"], "search-terms": ["pytest fixtures", "Flask test setup", "admin user seed", "file upload fixture", "app context test fixture"], "state": 2, "file_id": 22, "knowledge_revision": 83, "git_revision": "2b1a1485bca83d45ad2f86ba6c73a025bfd2c96f", "revision_history": [{"72": ""}, {"83": "2b1a1485bca83d45ad2f86ba6c73a025bfd2c96f"}], "ctags": [{"_type": "tag", "name": "_factory", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^    def _factory(content: bytes = b\"Sample receipt total $12.34\", filename: str = \"receipt.txt\")/", "file": true, "language": "Python", "kind": "function", "signature": "(content: bytes = b\"Sample receipt total $12.34\", filename: str = \"receipt.txt\")", "scope": "make_file_bytes", "scopeKind": "function"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "auth_header", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def auth_header(register_user_and_get_token):$/", "language": "Python", "kind": "function", "signature": "(register_user_and_get_token)"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def client(app: Flask):$/", "language": "Python", "kind": "function", "signature": "(app: Flask)"}, {"_type": "tag", "name": "db_session", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def db_session(app: Flask):$/", "language": "Python", "kind": "function", "signature": "(app: Flask)"}, {"_type": "tag", "name": "ensure_admin", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def ensure_admin(db_session):$/", "language": "Python", "kind": "function", "signature": "(db_session)"}, {"_type": "tag", "name": "flask_app", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^from app import app as flask_app  # type: ignore$/", "language": "Python", "kind": "unknown", "nameref": "unknown:app"}, {"_type": "tag", "name": "make_file_bytes", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def make_file_bytes():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "register_user_and_get_token", "path": "/home/kavia/workspace/code-generation/document-processing-platform-18817-18826/intelligent_receipt_processing_backend/tests/conftest.py", "pattern": "/^def register_user_and_get_token(client) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "function", "signature": "(client)"}], "hash": "7d51c9e88df77c947249bf11d659bec9", "format-version": 4, "code-base-name": "intelligent_receipt_processing_backend", "filename": "intelligent_receipt_processing_backend/tests/conftest.py"}